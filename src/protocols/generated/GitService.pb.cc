// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GitService.proto

#include "GitService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace nexus {
class UploadPackRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadPackRequest>
      _instance;
} _UploadPackRequest_default_instance_;
class UploadPackResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadPackResponse>
      _instance;
} _UploadPackResponse_default_instance_;
class ReceivePackRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReceivePackRequest>
      _instance;
} _ReceivePackRequest_default_instance_;
class ListRefsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListRefsRequest>
      _instance;
} _ListRefsRequest_default_instance_;
class ListRefsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListRefsResponse>
      _instance;
} _ListRefsResponse_default_instance_;
}  // namespace nexus
namespace protobuf_GitService_2eproto {
void InitDefaultsUploadPackRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::nexus::_UploadPackRequest_default_instance_;
    new (ptr) ::nexus::UploadPackRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nexus::UploadPackRequest::InitAsDefaultInstance();
}

void InitDefaultsUploadPackRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUploadPackRequestImpl);
}

void InitDefaultsUploadPackResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::nexus::_UploadPackResponse_default_instance_;
    new (ptr) ::nexus::UploadPackResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nexus::UploadPackResponse::InitAsDefaultInstance();
}

void InitDefaultsUploadPackResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUploadPackResponseImpl);
}

void InitDefaultsReceivePackRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::nexus::_ReceivePackRequest_default_instance_;
    new (ptr) ::nexus::ReceivePackRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nexus::ReceivePackRequest::InitAsDefaultInstance();
}

void InitDefaultsReceivePackRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReceivePackRequestImpl);
}

void InitDefaultsListRefsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::nexus::_ListRefsRequest_default_instance_;
    new (ptr) ::nexus::ListRefsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nexus::ListRefsRequest::InitAsDefaultInstance();
}

void InitDefaultsListRefsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListRefsRequestImpl);
}

void InitDefaultsListRefsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::nexus::_ListRefsResponse_default_instance_;
    new (ptr) ::nexus::ListRefsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nexus::ListRefsResponse::InitAsDefaultInstance();
}

void InitDefaultsListRefsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListRefsResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::UploadPackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::UploadPackRequest, reponame_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::UploadPackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::UploadPackResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::ReceivePackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::ReceivePackRequest, reponame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::ReceivePackRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::ListRefsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::ListRefsRequest, reponame_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::ListRefsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::nexus::ListRefsResponse, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::nexus::UploadPackRequest)},
  { 6, -1, sizeof(::nexus::UploadPackResponse)},
  { 12, -1, sizeof(::nexus::ReceivePackRequest)},
  { 19, -1, sizeof(::nexus::ListRefsRequest)},
  { 25, -1, sizeof(::nexus::ListRefsResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::nexus::_UploadPackRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nexus::_UploadPackResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nexus::_ReceivePackRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nexus::_ListRefsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::nexus::_ListRefsResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "GitService.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020GitService.proto\022\005nexus\032\033google/protob"
      "uf/empty.proto\"%\n\021UploadPackRequest\022\020\n\010r"
      "epoName\030\001 \001(\t\"\"\n\022UploadPackResponse\022\014\n\004d"
      "ata\030\001 \001(\014\"4\n\022ReceivePackRequest\022\020\n\010repoN"
      "ame\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\"#\n\017ListRefsReque"
      "st\022\020\n\010repoName\030\001 \001(\t\" \n\020ListRefsResponse"
      "\022\014\n\004data\030\001 \001(\0142\240\002\n\nGitService\022B\n\rListKno"
      "wnRefs\022\026.nexus.ListRefsRequest\032\027.nexus.L"
      "istRefsResponse\"\000\022E\n\020ListRefsForClone\022\026."
      "nexus.ListRefsRequest\032\027.nexus.ListRefsRe"
      "sponse\"\000\022C\n\nUploadPack\022\030.nexus.UploadPac"
      "kRequest\032\031.nexus.UploadPackResponse\"\000\022B\n"
      "\013ReceivePack\022\031.nexus.ReceivePackRequest\032"
      "\026.google.protobuf.Empty\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 553);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GitService.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GitService_2eproto
namespace nexus {

// ===================================================================

void UploadPackRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadPackRequest::kRepoNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadPackRequest::UploadPackRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GitService_2eproto::InitDefaultsUploadPackRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nexus.UploadPackRequest)
}
UploadPackRequest::UploadPackRequest(const UploadPackRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reponame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reponame().size() > 0) {
    reponame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reponame_);
  }
  // @@protoc_insertion_point(copy_constructor:nexus.UploadPackRequest)
}

void UploadPackRequest::SharedCtor() {
  reponame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UploadPackRequest::~UploadPackRequest() {
  // @@protoc_insertion_point(destructor:nexus.UploadPackRequest)
  SharedDtor();
}

void UploadPackRequest::SharedDtor() {
  reponame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadPackRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadPackRequest::descriptor() {
  ::protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadPackRequest& UploadPackRequest::default_instance() {
  ::protobuf_GitService_2eproto::InitDefaultsUploadPackRequest();
  return *internal_default_instance();
}

UploadPackRequest* UploadPackRequest::New(::google::protobuf::Arena* arena) const {
  UploadPackRequest* n = new UploadPackRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadPackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nexus.UploadPackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reponame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UploadPackRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nexus.UploadPackRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string repoName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reponame()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reponame().data(), static_cast<int>(this->reponame().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nexus.UploadPackRequest.repoName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nexus.UploadPackRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nexus.UploadPackRequest)
  return false;
#undef DO_
}

void UploadPackRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nexus.UploadPackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repoName = 1;
  if (this->reponame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reponame().data(), static_cast<int>(this->reponame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nexus.UploadPackRequest.repoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reponame(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nexus.UploadPackRequest)
}

::google::protobuf::uint8* UploadPackRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nexus.UploadPackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repoName = 1;
  if (this->reponame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reponame().data(), static_cast<int>(this->reponame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nexus.UploadPackRequest.repoName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reponame(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nexus.UploadPackRequest)
  return target;
}

size_t UploadPackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nexus.UploadPackRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string repoName = 1;
  if (this->reponame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reponame());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadPackRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nexus.UploadPackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadPackRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadPackRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nexus.UploadPackRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nexus.UploadPackRequest)
    MergeFrom(*source);
  }
}

void UploadPackRequest::MergeFrom(const UploadPackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nexus.UploadPackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reponame().size() > 0) {

    reponame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reponame_);
  }
}

void UploadPackRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nexus.UploadPackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadPackRequest::CopyFrom(const UploadPackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nexus.UploadPackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadPackRequest::IsInitialized() const {
  return true;
}

void UploadPackRequest::Swap(UploadPackRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadPackRequest::InternalSwap(UploadPackRequest* other) {
  using std::swap;
  reponame_.Swap(&other->reponame_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadPackRequest::GetMetadata() const {
  protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadPackResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadPackResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadPackResponse::UploadPackResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GitService_2eproto::InitDefaultsUploadPackResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nexus.UploadPackResponse)
}
UploadPackResponse::UploadPackResponse(const UploadPackResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:nexus.UploadPackResponse)
}

void UploadPackResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UploadPackResponse::~UploadPackResponse() {
  // @@protoc_insertion_point(destructor:nexus.UploadPackResponse)
  SharedDtor();
}

void UploadPackResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadPackResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadPackResponse::descriptor() {
  ::protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadPackResponse& UploadPackResponse::default_instance() {
  ::protobuf_GitService_2eproto::InitDefaultsUploadPackResponse();
  return *internal_default_instance();
}

UploadPackResponse* UploadPackResponse::New(::google::protobuf::Arena* arena) const {
  UploadPackResponse* n = new UploadPackResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadPackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:nexus.UploadPackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UploadPackResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nexus.UploadPackResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nexus.UploadPackResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nexus.UploadPackResponse)
  return false;
#undef DO_
}

void UploadPackResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nexus.UploadPackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nexus.UploadPackResponse)
}

::google::protobuf::uint8* UploadPackResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nexus.UploadPackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nexus.UploadPackResponse)
  return target;
}

size_t UploadPackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nexus.UploadPackResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UploadPackResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nexus.UploadPackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadPackResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadPackResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nexus.UploadPackResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nexus.UploadPackResponse)
    MergeFrom(*source);
  }
}

void UploadPackResponse::MergeFrom(const UploadPackResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nexus.UploadPackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void UploadPackResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nexus.UploadPackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadPackResponse::CopyFrom(const UploadPackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nexus.UploadPackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadPackResponse::IsInitialized() const {
  return true;
}

void UploadPackResponse::Swap(UploadPackResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadPackResponse::InternalSwap(UploadPackResponse* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UploadPackResponse::GetMetadata() const {
  protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReceivePackRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReceivePackRequest::kRepoNameFieldNumber;
const int ReceivePackRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReceivePackRequest::ReceivePackRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GitService_2eproto::InitDefaultsReceivePackRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nexus.ReceivePackRequest)
}
ReceivePackRequest::ReceivePackRequest(const ReceivePackRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reponame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reponame().size() > 0) {
    reponame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reponame_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:nexus.ReceivePackRequest)
}

void ReceivePackRequest::SharedCtor() {
  reponame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReceivePackRequest::~ReceivePackRequest() {
  // @@protoc_insertion_point(destructor:nexus.ReceivePackRequest)
  SharedDtor();
}

void ReceivePackRequest::SharedDtor() {
  reponame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReceivePackRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReceivePackRequest::descriptor() {
  ::protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReceivePackRequest& ReceivePackRequest::default_instance() {
  ::protobuf_GitService_2eproto::InitDefaultsReceivePackRequest();
  return *internal_default_instance();
}

ReceivePackRequest* ReceivePackRequest::New(::google::protobuf::Arena* arena) const {
  ReceivePackRequest* n = new ReceivePackRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReceivePackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nexus.ReceivePackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reponame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReceivePackRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nexus.ReceivePackRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string repoName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reponame()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reponame().data(), static_cast<int>(this->reponame().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nexus.ReceivePackRequest.repoName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nexus.ReceivePackRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nexus.ReceivePackRequest)
  return false;
#undef DO_
}

void ReceivePackRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nexus.ReceivePackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repoName = 1;
  if (this->reponame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reponame().data(), static_cast<int>(this->reponame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nexus.ReceivePackRequest.repoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reponame(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nexus.ReceivePackRequest)
}

::google::protobuf::uint8* ReceivePackRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nexus.ReceivePackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repoName = 1;
  if (this->reponame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reponame().data(), static_cast<int>(this->reponame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nexus.ReceivePackRequest.repoName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reponame(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nexus.ReceivePackRequest)
  return target;
}

size_t ReceivePackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nexus.ReceivePackRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string repoName = 1;
  if (this->reponame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reponame());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReceivePackRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nexus.ReceivePackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReceivePackRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReceivePackRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nexus.ReceivePackRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nexus.ReceivePackRequest)
    MergeFrom(*source);
  }
}

void ReceivePackRequest::MergeFrom(const ReceivePackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nexus.ReceivePackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reponame().size() > 0) {

    reponame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reponame_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ReceivePackRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nexus.ReceivePackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceivePackRequest::CopyFrom(const ReceivePackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nexus.ReceivePackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceivePackRequest::IsInitialized() const {
  return true;
}

void ReceivePackRequest::Swap(ReceivePackRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReceivePackRequest::InternalSwap(ReceivePackRequest* other) {
  using std::swap;
  reponame_.Swap(&other->reponame_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReceivePackRequest::GetMetadata() const {
  protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListRefsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListRefsRequest::kRepoNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRefsRequest::ListRefsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GitService_2eproto::InitDefaultsListRefsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nexus.ListRefsRequest)
}
ListRefsRequest::ListRefsRequest(const ListRefsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reponame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reponame().size() > 0) {
    reponame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reponame_);
  }
  // @@protoc_insertion_point(copy_constructor:nexus.ListRefsRequest)
}

void ListRefsRequest::SharedCtor() {
  reponame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListRefsRequest::~ListRefsRequest() {
  // @@protoc_insertion_point(destructor:nexus.ListRefsRequest)
  SharedDtor();
}

void ListRefsRequest::SharedDtor() {
  reponame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListRefsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListRefsRequest::descriptor() {
  ::protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRefsRequest& ListRefsRequest::default_instance() {
  ::protobuf_GitService_2eproto::InitDefaultsListRefsRequest();
  return *internal_default_instance();
}

ListRefsRequest* ListRefsRequest::New(::google::protobuf::Arena* arena) const {
  ListRefsRequest* n = new ListRefsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListRefsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nexus.ListRefsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reponame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListRefsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nexus.ListRefsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string repoName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reponame()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reponame().data(), static_cast<int>(this->reponame().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "nexus.ListRefsRequest.repoName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nexus.ListRefsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nexus.ListRefsRequest)
  return false;
#undef DO_
}

void ListRefsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nexus.ListRefsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repoName = 1;
  if (this->reponame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reponame().data(), static_cast<int>(this->reponame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nexus.ListRefsRequest.repoName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reponame(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nexus.ListRefsRequest)
}

::google::protobuf::uint8* ListRefsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nexus.ListRefsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string repoName = 1;
  if (this->reponame().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reponame().data(), static_cast<int>(this->reponame().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "nexus.ListRefsRequest.repoName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reponame(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nexus.ListRefsRequest)
  return target;
}

size_t ListRefsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nexus.ListRefsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string repoName = 1;
  if (this->reponame().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reponame());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListRefsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nexus.ListRefsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRefsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRefsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nexus.ListRefsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nexus.ListRefsRequest)
    MergeFrom(*source);
  }
}

void ListRefsRequest::MergeFrom(const ListRefsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nexus.ListRefsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reponame().size() > 0) {

    reponame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reponame_);
  }
}

void ListRefsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nexus.ListRefsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRefsRequest::CopyFrom(const ListRefsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nexus.ListRefsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRefsRequest::IsInitialized() const {
  return true;
}

void ListRefsRequest::Swap(ListRefsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRefsRequest::InternalSwap(ListRefsRequest* other) {
  using std::swap;
  reponame_.Swap(&other->reponame_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListRefsRequest::GetMetadata() const {
  protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListRefsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListRefsResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRefsResponse::ListRefsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GitService_2eproto::InitDefaultsListRefsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:nexus.ListRefsResponse)
}
ListRefsResponse::ListRefsResponse(const ListRefsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:nexus.ListRefsResponse)
}

void ListRefsResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ListRefsResponse::~ListRefsResponse() {
  // @@protoc_insertion_point(destructor:nexus.ListRefsResponse)
  SharedDtor();
}

void ListRefsResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListRefsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListRefsResponse::descriptor() {
  ::protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRefsResponse& ListRefsResponse::default_instance() {
  ::protobuf_GitService_2eproto::InitDefaultsListRefsResponse();
  return *internal_default_instance();
}

ListRefsResponse* ListRefsResponse::New(::google::protobuf::Arena* arena) const {
  ListRefsResponse* n = new ListRefsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListRefsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:nexus.ListRefsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListRefsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:nexus.ListRefsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:nexus.ListRefsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:nexus.ListRefsResponse)
  return false;
#undef DO_
}

void ListRefsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:nexus.ListRefsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:nexus.ListRefsResponse)
}

::google::protobuf::uint8* ListRefsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:nexus.ListRefsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nexus.ListRefsResponse)
  return target;
}

size_t ListRefsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nexus.ListRefsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListRefsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nexus.ListRefsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRefsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRefsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nexus.ListRefsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nexus.ListRefsResponse)
    MergeFrom(*source);
  }
}

void ListRefsResponse::MergeFrom(const ListRefsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nexus.ListRefsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void ListRefsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nexus.ListRefsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRefsResponse::CopyFrom(const ListRefsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nexus.ListRefsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRefsResponse::IsInitialized() const {
  return true;
}

void ListRefsResponse::Swap(ListRefsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRefsResponse::InternalSwap(ListRefsResponse* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListRefsResponse::GetMetadata() const {
  protobuf_GitService_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GitService_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace nexus

// @@protoc_insertion_point(global_scope)
